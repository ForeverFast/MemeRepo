
<Window x:Class="Hybrid.WindowsApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:converters="clr-namespace:Hybrid.WindowsApp.Converters"
        xmlns:blazor="clr-namespace:Microsoft.AspNetCore.Components.WebView.Wpf;assembly=Microsoft.AspNetCore.Components.WebView.Wpf"
        xmlns:ib="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:rc="clr-namespace:Web.Core;assembly=Web.Core"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:local="clr-namespace:Hybrid.WindowsApp"
        mc:Ignorable="d"
        x:Name="MainW"
        Title="MemeRepo"
        Height="768" Width="1024" MinHeight="768" MinWidth="715"
        Background="{DynamicResource GrayLVL3}"
        WindowState="{Binding WindowState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="7"
                                  CornerRadius="0"
                                  
                                  GlassFrameThickness="0"
                                  NonClientFrameEdges="None"
                                  ResizeBorderThickness="3"
                                  UseAeroCaptionButtons="True">

                    </WindowChrome>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderThickness="1,0,1,1" >
                            <ContentPresenter x:Name="CP" Content="{TemplateBinding Content}" Grid.Row="1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="WindowState" Value="Normal">
                                <Setter Property="Margin" TargetName="CP" Value="0"/>
                            </Trigger>
                            <Trigger Property="WindowState" Value="Maximized">
                                <Setter Property="Margin" TargetName="CP" Value="8,10,10,10"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Window.Style>

    <Window.Resources>

        <converters:WindowStateToWindowsStateConverter x:Key="wdtwd"/>
        <converters:BoolToVisibilityConverter x:Key="btv"/>
        <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
        
    </Window.Resources>

    <Grid Background="{DynamicResource GrayLVL3}">
        
        <ib:Interaction.Triggers>
            <ib:EventTrigger EventName="DragLeave">
                <ib:InvokeCommandAction Command="{Binding DragLeaveCommand}" />
            </ib:EventTrigger>
        </ib:Interaction.Triggers>

        <Grid Height="7" VerticalAlignment="Top" Background="{StaticResource GrayLVL4}" Margin="0,0,0,0">
         
        </Grid>

        <Grid Margin="0,7,0,0" Background="{DynamicResource GrayLVL3}">
            <Border Margin="30" BorderThickness="2" BorderBrush="{DynamicResource StandartLightColor}">
                <Border.Visibility>
                    <MultiBinding Converter="{StaticResource btv}">
                        <Binding ElementName="MainW" Path="DataContext.LocalDragAndDropFlag" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding ElementName="MainW" Path="DataContext.ShowFileDropBlock" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                    </MultiBinding>
                </Border.Visibility>
                <TextBox Text="Заполни меня (͡° ͜ʖ ͡°)" FontSize="44" Background="Transparent" Foreground="{DynamicResource StandartLightColor}"
                         BorderThickness="0"
                         VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
        </Grid>

        <ListBox ItemsSource="{Binding DropFiles}" Margin="0,7,0,0" Background="{DynamicResource GrayLVL3}" BorderThickness="0" Opacity="0.1"
                 VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                 dd:DragDrop.IsDropTarget="True" 
                 dd:DragDrop.DropHandler="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext}"/>

        <blazor:BlazorWebView x:Name="BlazorMainView" HostPage="wwwroot\index.html" Services="{DynamicResource services}"
                              Margin="0,7,0,0" Background="{DynamicResource GrayLVL3}">
            <blazor:BlazorWebView.Visibility>
                <MultiBinding Converter="{StaticResource btv}">
                    <Binding ElementName="MainW" Path="DataContext.LocalDragAndDropFlag" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                    <Binding ElementName="MainW" Path="DataContext.ShowFileDropBlock" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                </MultiBinding>
            </blazor:BlazorWebView.Visibility>
            <blazor:BlazorWebView.RootComponents>
                <blazor:RootComponent Selector="#app" x:Name="BlazorRootComponent" ComponentType="{x:Type rc:AppRoot}" />
            </blazor:BlazorWebView.RootComponents>
        </blazor:BlazorWebView>
        
    </Grid>
    
</Window>

<!--Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                   AncestorType=Window}, Path=DataContext.ShowFileDropBlock, Converter={StaticResource btv}}"-->
